Readme-BG-Usafe
האפליקציה מאפשרת לסטודנטים לבצע דיווחים בזמן אמת וצפייה בדיווחים של אחרים בדומה לWAZE ובכך לעזור לסטודנטים להימנע מאזורים בהם לא הרחובות חשוכים/יש רכב או אדם שיכור או נרקומן אשר גורם לדרך להיות פחות סימפטית.
בנוסף בעזרת הדיווחים יהיה ניתן להפיק דוח לפי שם רחוב ולראות את מספר הדיווחים באותו רחוב וזה ייתן אינדיקציה לבחירת רחוב כאשר סטודנט חדש עובר לגור בב"ש ורוצה להבין באיזה אזור מומלץ לגור.


תיקיית views: מכילה את כל דפי HTML
3העמודים הבאים מופיעים ב navbar : 
1.	Index- דף הבית 
2.	About- דף הסבר על האפליקציה.
3.	Services – דף בו מוצגות 4 אפשריות עבור המשתמש: 
מעמוד services יש קישורים לעמודים הבאים : 
•	Send a report
•	Real time map
•	Statistical reports 
•	WhatsApp link

פירוט של כל אחד מעמודי ה services בנפרד : 
הערה : 
בגלל שבשלב זה אין חיבור לDB המידע מהמשתמש נשמרים בlocal Storage
כדי לראות את כל הדיווחים על המפה יש לאשר מיקום
 צריך לאשר מיקום בעמודים של real time map וsend report 
זה קישור לסרטון שעורך דקה שבו אני מראה את כל הפיצ'רים באתר ולמטה מפורט על כל עמוד:
https://www.loom.com/share/5a2f448013ea4af7a9d613b7ef6ae760 

א.	WhatsApp link – קישור לקבוצת וואטסאפ בחלון נפרד כדי שהמשתמש יוכל להצטרף לקבוצה ובמידה וצריך ליווי טלפוני יוכל לבקש מחברי קבוצה.
ב.	Send a report - ממימוש בעזרת form זהו טופס שלמשתמש יש אפשרות לשלוח דיווח-
בדף זה יש מספר תהליכים:
•	ניתן לבחור את סוג הדיווח בעזרת כפתור radio
•	ולידציה – יש required על האינפוט שהמשתמש מכניס עליו לתאר בקצרה על המקרה
ובנוסף כאשר הוא עושה submit אז יש alert שמעדכן שקיבלנו את הדיווח שלו והוא יכול לעבור למפה בזמן אמת והוא יראה את הדיווח. 0
•	שמירת הנתונים - בשלב זה אין שרת ובסיס נתונים ולכן ביצעתי שמירה של הדיווחים אל תוך מערך והמערך נשמר בlocal Storge  את המידע הזה מימשתי בדף הבא של Realtime map (הסבר שם)
כדי לדמות בשלב זה מספר דיווחים לכל דיווח הוספתי מספר רנדומלי בין 1-10 כפול 0.02 וכך ניתן לקבל מכל דיווח מיקום שונה ( במפה בזמן אמת אפשר לראות מספר דיווחים קרובים בכל פעם ) (רלוונטי לפונקציה reportForm.addEventListener בעמוד sendReport.js )

ג. real time map – בחלק זה ניתן לראות את המפה יחד עם הדיווחים
במידה ונכנסים למפה שאין עוד דיווחים- המפה ריקה.
במידה ונכנסתם למפה אחרי מספר דיווחים תוכלו לראות מספר מרקרים על המפה
 (בלחיצה על המרקר ניתן לראות את המידע מהדיווח שהמשתמש הזין)
ד. statistical report- כיוון שבשלב זה הנתונים נשמרו לlocal storeg בלבד אז ביצעתי רק עיצוב וטופס עבור חיפוש של שם הרחוב. בתום שלב ג כאשר יהיה בסיס נתונים . הדיווחים של המשתמש ישמרו ואוכל לבצע שאילתה בבסיס נתונים שבעזרתה תפיק דוח למשתמש עם כל הדיווחים שהיו באותו רחוב. 

הערות – 
•	הפרויקט מסודר ב2 תיקיות 
o	views- קבצתי html
o	Static –קובץ אחד של css בתוכה תיקיית images ובנוסף קובץ JS לכל עמוד HTML של services 
o	הוספתי ספרייה מוכנה של jQuery כדי להימנע משכפול קוד של nav,header,footer שיופיעו בכל העמודים בלי שכפול קוד . 
•	העיצוב של nav,header,footer נמצא בסוף העמוד של הCSS
•	לא בהכל השתמשתי בgrid  אלא רק בחלק דוגמה לgrid מצוינת בהערות בקובץ CSS.
•	 Nav-bar במצב של חלון קטן יותר הסרגל הופך לסמל של שלושה קווים שניתן לפתוח.
•	עמודים שיש בהם טפסים – send report ו statistical report
•	שימוש המפות ופונקציות העזר עבור maker,info window,navigator- הכל בעזרת googleAPI ולכן יש בכל העמודים קישורים למפתח שיצרתי בחשבון googleAPI. 
•	בניתי מערך שקולט את הinput מהמשתמש ושומר אותו בתור אויבייקט של json ניתן לראות את הקוד הרלוונטי בעמוד send-report.js 
•	לאחר המון בירורים מסתבר שהשימוש בgeolocation כשאין שרת לא תמיד נותן את הקורדינטות של המיקום הנוכחי אלא לרוב יתן במקום קורדינטות אחרות של ip location לעיתים הוא מזהה לפי WIFI ולכן כן נותן מיקום מדוויק) ולכן יתכן שבעת השימוש בשלב זה בלי נקודת הציון למרות הפעלת המיקום יהיו לא בהכרח במקום הנכון. 

